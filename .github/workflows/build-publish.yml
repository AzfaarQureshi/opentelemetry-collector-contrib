name: build-publish
on:
  push:
    branches: [master]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  windows-test:
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash
      - name: Cache Go Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: \Users\runneradmin\go\pkg\mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Unit Test
        run: (Get-Childitem -Include go.mod -Recurse) | ForEach-Object { cd (Split-Path $_ -Parent); go test ./...; if ($LastExitCode -gt 0) { exit $LastExitCode } }
      - name: GitHub Issue Generator
        if: ${{ failure() && github.ref == 'ref/head/master' }}
        run: go run cmd/issuegenerator/main.go $TEST_RESULTS
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.splitcrosscompile.outputs.matrix }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: /home/runner/go/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Restore binaries
        id: binary-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-binaries
        with:
          path: /home/runner/go/bin
          key: tools-${{ runner.os }}-${{ hashFiles('./internal/tools/go.mod') }}
      - name: Install tools
        if: steps.binary-cache.outputs.cache-hit != 'true'
        run: make install-tools
      - name: Install deps
        run: make -j8 for-all-target TARGET=dep
      - name: Install testbed tools
        run: make -C testbed install-tools
      - name: Setup cross-compile matrix
        id: splitcrosscompile
        run:  ./.github/workflows/scripts/setup_cross_compile.sh
      - name: Upload Binaries
        uses: actions/upload-artifact@v1
        with:
          name: binaries
          path: /home/runner/go/bin
  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: /home/runner/go/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Download Binaries
        uses: actions/download-artifact@v1
        with:
          name: binaries
          path: /home/runner/go/bin
      - name: Add Permissions to Binaries
        run: chmod -R +x /home/runner/go/bin
      - name: Lint
        run: make -j2 for-all-target TARGET=lint
      - name: Checks
        run: make -j4 checklicense impi misspell
      - name: Codegen
        run: |
          make generate
          git diff --exit-code ':!*go.sum' || (echo 'Generated code is out of date, please run "make generate" and commit the changes in this PR.' && exit 1)
  build-examples:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: /home/runner/go/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Download Binaries
        uses: actions/download-artifact@v1
        with:
          name: binaries
          path: /home/runner/go/bin
      - name: Add Permissions to Binaries
        run: chmod -R +x /home/runner/go/bin
      - name: Build examples
        run: make build-examples
  cross-compile:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: /home/runner/go/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Download Binaries
        uses: actions/download-artifact@v1
        with:
          name: binaries
          path: /home/runner/go/bin
      - name: Add Permissions to Binaries
        run: chmod -R +x /home/runner/go/bin
      - name: Build collector for all archs
        run: make ${{ matrix.arch }}
